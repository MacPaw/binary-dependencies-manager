name: Build Multi-Platform Binary

permissions:
  contents: write

on:
  push:
    tags:
      - '*'

jobs:
  load-env:
    uses: ./.github/workflows/load-env.yml

  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get-tag.outputs.tag_name }}
      release_id: ${{ steps.check-release.outputs.release_id }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag and checkout
      id: get-tag
      run: ./.github/workflows/scripts/build-multi-platform-binary/get-latest-tag.sh

    - name: Check or create release
      id: check-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG_NAME: ${{ steps.get-tag.outputs.tag_name }}
      run: node ./.github/workflows/scripts/build-multi-platform-binary/check-release.js

  build-binary:
    needs: [load-env, create-release]
    env:
      package_name: ${{ needs.load-env.outputs.package-name }}
    strategy:
      matrix:
        include:
          - os: ${{ needs.load-env.outputs.macOS-runner-os }}
            arch: universal
            xcode-version: ${{ needs.load-env.outputs.xcode-version }}
            swift-version: ${{ needs.load-env.outputs.swift-version }}
          - os: ${{ needs.load-env.outputs.macOS-runner-os }}
            arch: arm64
            xcode-version: ${{ needs.load-env.outputs.xcode-version }}
            swift-version: ${{ needs.load-env.outputs.swift-version }}
          - os: ${{ needs.load-env.outputs.macOS-runner-os }}
            arch: x86_64
            xcode-version: ${{ needs.load-env.outputs.xcode-version }}
            swift-version: ${{ needs.load-env.outputs.swift-version }}
          - os: ubuntu-latest
            arch: x86_64
            swift-version: ${{ needs.load-env.outputs.swift-version }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout tag
      run: git checkout ${{ needs.create-release.outputs.tag_name }}

    - name: Select Swift Version
      uses: ./.github/workflows/templates/select-swift-version/
      with:
        xcode-version: ${{ matrix.xcode-version }}
        swift-version: ${{ matrix.swift-version }}

    - name: Cache Swift Packages
      uses: ./.github/workflows/templates/swift-cache/
      with:
        package-name: ${{ env.package_name }}
        build-system: swift

    - name: Check if asset already exists
      id: check-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: ${{ needs.create-release.outputs.release_id }}
        TAG_NAME: ${{ needs.create-release.outputs.tag_name }}
        PLATFORM: ${{ runner.os }}
        ARCH: ${{ matrix.arch }}
      run: node ./.github/workflows/scripts/build-multi-platform-binary/check-asset.js

    - name: Build binary
      id: build
      if: steps.check-asset.outputs.asset_exists == 'false'
      env:
        TAG_NAME: ${{ needs.create-release.outputs.tag_name }}
        PLATFORM: ${{ runner.os }}
        ARCH: ${{ matrix.arch }}
      run: ./.github/workflows/scripts/build-multi-platform-binary/build-binary.sh

    - name: Upload asset to release
      if: steps.build.conclusion == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: ${{ needs.create-release.outputs.release_id }}
        ASSET_PATH: ${{ steps.build.outputs.asset_path }}
        ASSET_NAME: ${{ steps.build.outputs.asset_name }}
      run: node ./.github/workflows/scripts/build-multi-platform-binary/upload-asset.js
