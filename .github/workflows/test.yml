name: Test

on:
  pull_request:
    branches:
      - main
      - chore/refactor

jobs:
  load_env:
    runs-on: ubuntu-latest
    outputs:
      swift-version: ${{ steps.common-env.outputs.swift-version }}
      xcode-version: ${{ steps.common-env.outputs.xcode-version }}
    steps:
      - name: Setup Common Environment
        id: common-env
        uses: ./.github/workflows/templates/setup-common-env.yaml
  test:
    needs: load_env
    env:
      package_name: binary-dependencies-manager

    strategy:
      matrix:
        include:
          - os: macos-15
            build-system: swift
            swift-version: ${{ needs.load_env.outputs.swift-version }}
            xcode-version: ${{ needs.load_env.outputs.xcode-version }}
          - os: ubuntu-latest
            build-system: swift
            swift-version: ${{ needs.load_env.outputs.swift-version }}
          - os: macos-15
            build-system: xcodebuild
            xcode-version: ${{ needs.load_env.outputs.xcode-version }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Select Swift Version
      uses: ./.github/workflows/templates/select-swift-version.yaml
      with:
        xcode-version: ${{ matrix.xcode-version }}
        swift-version: ${{ matrix.swift-version }}

    - name: Cache Swift Packages
      uses: ./.github/workflows/templates/swift-cache.yaml
      with:
        package-name: ${{ env.package_name }}
        build-system: ${{ matrix.build-system }}

    - name: Build with Swift Package Manager
      if: matrix.build-system == 'swift'
      run: swift build

    - name: Test with Swift Package Manager
      if: matrix.build-system == 'swift'
      run: swift test

    - name: Build with Xcodebuild
      if: matrix.build-system == 'xcodebuild'
      run: |
        xcodebuild \
          -scheme ${{ env.package_name }} \
          -destination 'platform=macOS' \
          -derivedDataPath DerivedData \
          -collect-test-diagnostics never \
          RUN_CLANG_STATIC_ANALYZER=NO \
          COMPILER_INDEX_STORE_ENABLE=NO \
          build-for-testing

    - name: Test with Xcodebuild
      if: matrix.build-system == 'xcodebuild'
      run: |
        xcodebuild \
          -scheme ${{ env.package_name }} \
          -destination 'platform=macOS' \
          -derivedDataPath DerivedData \
          -collect-test-diagnostics never \
          RUN_CLANG_STATIC_ANALYZER=NO \
          COMPILER_INDEX_STORE_ENABLE=NO \
          test
